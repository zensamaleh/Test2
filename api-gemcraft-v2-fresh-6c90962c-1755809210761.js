var m=[{id:"1",name:"Alice Johnson",email:"alice@example.com",createdAt:"2024-01-01"},{id:"2",name:"Bob Smith",email:"bob@example.com",createdAt:"2024-01-02"}],c=[{id:"1",userId:"1",title:"Deploy to Cloudflare",completed:!0,createdAt:"2024-01-01"},{id:"2",userId:"1",title:"Add authentication",completed:!1,createdAt:"2024-01-02"}];function s(a){return{"Access-Control-Allow-Origin":a||"*","Access-Control-Allow-Methods":"GET, POST, PUT, DELETE, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization","Content-Type":"application/json"}}var p={async fetch(a){let o=new URL(a.url),i=a.method,e=a.headers.get("Origin")||"*";if(i==="OPTIONS")return new Response(null,{headers:s(e)});try{if(o.pathname==="/api/health"&&i==="GET")return Response.json({status:"healthy",timestamp:new Date().toISOString(),version:"1.0.0"},{headers:s(e)});if(o.pathname==="/api/users"&&i==="GET")return Response.json({users:m},{headers:s(e)});let l=o.pathname.match(/^\/api\/users\/(\d+)$/);if(l&&i==="GET"){let t=l[1],n=m.find(r=>r.id===t);return n?Response.json({user:n},{headers:s(e)}):Response.json({error:"User not found"},{status:404,headers:s(e)})}if(o.pathname==="/api/users"&&i==="POST"){let t=await a.json();if(!t.name||!t.email)return Response.json({error:"Name and email are required"},{status:400,headers:s(e)});let n={id:String(m.length+1),name:t.name,email:t.email,createdAt:new Date().toISOString()};return m.push(n),Response.json({user:n},{status:201,headers:s(e)})}if(o.pathname==="/api/todos"&&i==="GET"){let t=o.searchParams.get("userId"),n=o.searchParams.get("completed"),r=c;return t&&(r=r.filter(d=>d.userId===t)),n!==null&&(r=r.filter(d=>d.completed===(n==="true"))),Response.json({todos:r},{headers:s(e)})}let h=o.pathname.match(/^\/api\/todos\/(\d+)$/);if(h&&i==="PUT"){let t=h[1],n=await a.json(),r=c.findIndex(d=>d.id===t);return r===-1?Response.json({error:"Todo not found"},{status:404,headers:s(e)}):(c[r]={...c[r],...n},Response.json({todo:c[r]},{headers:s(e)}))}if(o.pathname==="/api/echo"&&i==="POST"){let t=await a.json();return Response.json({echo:t,headers:Object.fromEntries(a.headers.entries()),timestamp:new Date().toISOString()},{headers:s(e)})}return Response.json({error:"Not Found",path:o.pathname},{status:404,headers:s(e)})}catch(l){return console.error("API Error:",l),Response.json({error:"Internal Server Error"},{status:500,headers:s(e)})}}};export{p as default};
